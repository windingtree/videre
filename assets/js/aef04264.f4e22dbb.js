"use strict";(self.webpackChunkpackages_docs=self.webpackChunkpackages_docs||[]).push([[546],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=o,v=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(v,a(a({ref:t},p),{},{components:r})):n.createElement(v,a({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4075:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],s={sidebar_position:1,title:"Overview"},c=void 0,l={unversionedId:"protocol/overview",id:"protocol/overview",title:"Overview",description:"This specification describes how real-world service providers and consumers interact using the Videre Protocol to effect an exchange of a service.",source:"@site/docs/protocol/overview.md",sourceDirName:"protocol",slug:"/protocol/overview",permalink:"/videre/docs/protocol/overview",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/protocol/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Overview"},sidebar:"tutorialSidebar",previous:{title:"Quick-start",permalink:"/videre/docs/tutorial/quick-start"},next:{title:"Process",permalink:"/videre/docs/protocol/process"}},p={},u=[{value:"Design requirements",id:"design-requirements",level:2},{value:"Rationale",id:"rationale",level:2},{value:"Terminology",id:"terminology",level:2},{value:"User stories",id:"user-stories",level:2}],m={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This specification describes how ",(0,i.kt)("em",{parentName:"p"},"real-world")," service providers and consumers interact using the Videre Protocol to effect an exchange of a service."),(0,i.kt)("p",null,"This allows any service provider to create an ",(0,i.kt)("em",{parentName:"p"},"industry-specific")," marketplace on which to advertise their inventory in a permissionless, decentralised manner."),(0,i.kt)("h2",{id:"design-requirements"},"Design requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Anonymity"),": Consumers who are searching for inventory should not have any identifying information conveyed to the service provider."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Transparency"),": All actors bearing witness to the exchange must be able to see clearly the terms by which services are exchanged."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Data ownership"),": Service providers must be able to completely control their inventory. This control may be delegated."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Decentralised"),": The protocol must be permissionless, relying on no centralised infrastructure.")),(0,i.kt)("h2",{id:"rationale"},"Rationale"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Anonymity as protection against an adversarial business targetting users with aggressive pricing strategies."),(0,i.kt)("li",{parentName:"ul"},"Transparency allowing all in the marketplace to see the prices being offered and settled (akin to an L2 orderbook)."),(0,i.kt)("li",{parentName:"ul"},"Data ownership to prevent vendor lock-in and subsequent rent extraction techniques.")),(0,i.kt)("h2",{id:"terminology"},"Terminology"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Line")," refers to an industry that has an implementation."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Service provider")," refers to an entity providing an ",(0,i.kt)("strong",{parentName:"p"},"intangible")," act for which another party is willing to pay for."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Consumer")," refers to the party purchasing the intangible act."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Stub")," represents a service owed by the service provider to the consumer subject to terms."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Messaging system")," refers to the chosen protocol on which the service provider and consumer have agreed to communicate."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Personally identifiable information")," (PII) refers to any piece of data that can be used to uniquely identify a user. For example, the signature verification key, and the hash of one's static IP address are unique for each user and hence count as PII."),(0,i.kt)("h2",{id:"user-stories"},"User stories"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Search for providers by location."),(0,i.kt)("li",{parentName:"ol"},"Search for services by location matching specified parameters.")))}d.isMDXComponent=!0}}]);