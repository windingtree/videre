"use strict";(self.webpackChunkpackages_docs=self.webpackChunkpackages_docs||[]).push([[361],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return u}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(r),u=a,f=m["".concat(c,".").concat(u)]||m[u]||l[u]||o;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5018:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return l}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],s={sidebar_position:5,title:"Storage (Off-chain)"},c=void 0,p={unversionedId:"protocol/storage",id:"protocol/storage",title:"Storage (Off-chain)",description:"Storage System",source:"@site/docs/protocol/storage.md",sourceDirName:"protocol",slug:"/protocol/storage",permalink:"/videre/docs/protocol/storage",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/protocol/storage.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Storage (Off-chain)"},sidebar:"tutorialSidebar",previous:{title:"Messaging (Off-chain)",permalink:"/videre/docs/protocol/messaging"},next:{title:"Execution (On-Chain)",permalink:"/videre/docs/protocol/on-chain"}},d={},l=[{value:"Storage System",id:"storage-system",level:2},{value:"Generic Payloads",id:"generic-payloads",level:2},{value:"Service Provider Info / Items / Terms",id:"service-provider-info--items--terms",level:3},{value:"Stays Payloads",id:"stays-payloads",level:2},{value:"Accommodation Provider",id:"accommodation-provider",level:3},{value:"Item Info",id:"item-info",level:3},{value:"Terms Info",id:"terms-info",level:3}],m={toc:l};function u(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"storage-system"},"Storage System"),(0,o.kt)("p",null,"The protocol is designed to be storage system agnostic. For the quick-start and proof-of-concept implementations, the data storge system used is ",(0,o.kt)("a",{parentName:"p",href:"https://ipfs.io"},"IPFS"),". IPFS meets the design requirements of ",(0,o.kt)("em",{parentName:"p"},"decentralised")," and ",(0,o.kt)("em",{parentName:"p"},"data ownership"),". A requirement for pinning nodes in IPFS requires further analysis to make sure that the data remains available for dapp usage."),(0,o.kt)("h2",{id:"generic-payloads"},"Generic Payloads"),(0,o.kt)("h3",{id:"service-provider-info--items--terms"},"Service Provider Info / Items / Terms"),(0,o.kt)("p",null,"The initial design is for service provider data to be stored monolithically, excluding images. The payloads are generic in nature, with payloads designed to be extended by industry-specific implementations."),(0,o.kt)("p",null,"Each payload is placed in a ",(0,o.kt)("inlineCode",{parentName:"p"},"SignedPayloadWrapper"),", with an authorised API signer having signed a hash of the payload which is subsequently placed in ",(0,o.kt)("inlineCode",{parentName:"p"},"SignedPayloadWrapper.signature"),". This provides "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"message SignedPayloadWrapper {\n  // ServiceProvider.data\n  bytes payload = 1;\n  // signed hash of payload by ServiceProvider API signer\n  bytes signature = 2;\n}\n\nmessage ServiceItemData {\n  // primitive item.id\n  bytes item = 1;\n  // industry-specific payload describing item\n  bytes payload = 2;\n}\n\nmessage ServiceTermData {\n  // primitive term.id\n  bytes term = 1;\n  // industry-specific payload describing term\n  bytes payload = 2;\n  // smart contract address that implements ITerm interface\n  string implementation = 3;\n}\n\nmessage ServiceProviderData {\n  // primitive serviceProvider.id\n  bytes serviceProvider = 1;\n  // services (items) provided by this service provider\n  repeated ServiceItemData items = 2;\n  // terms that may be applicable to services provided\n  repeated ServiceTermData terms = 3;\n}\n")),(0,o.kt)("h2",{id:"stays-payloads"},"Stays Payloads"),(0,o.kt)("h3",{id:"accommodation-provider"},"Accommodation Provider"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"message AccommodationProvider {\n  string name = 1;\n  string description = 2;\n  google.type.LatLng location = 3;\n}\n")),(0,o.kt)("h3",{id:"item-info"},"Item Info"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"message AccommodationItem {\n  string name = 1;\n  string description = 2;\n}\n")),(0,o.kt)("h3",{id:"terms-info"},"Terms Info"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"message AccommodationTerm {\n  string name = 1;\n  string description = 2;\n}\n")))}u.isMDXComponent=!0}}]);